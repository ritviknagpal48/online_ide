{"ast":null,"code":"import _slicedToArray from \"/Users/ritviknagpal/Desktop/IDE/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ritviknagpal/Desktop/IDE/my-app/src/components/Textbox.js\";\n// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n// import axios from 'axios';\n// import CodeMirror from '@uiw/react-codemirror';\n// import 'codemirror/addon/display/autorefresh';\n// import 'codemirror/addon/comment/comment';\n// import 'codemirror/addon/edit/matchbrackets';\n// import 'codemirror/keymap/sublime';\n// import 'codemirror/theme/dracula.css';\n// const Textbox = ({ lang }) => {\n//   const [language, setLanguage] = useState(lang);\n//   const [code, setCode] = useState('//Enter your ' + lang + ' code here');\n//   const [token, setToken] = useState(null);\n//   const [output, setOutput] = useState('');\n//   const [input, setInput] = useState('');\n//   //   const [id, setId] = useState(12);\n//   const onChange1 = e => {\n//     setCode(e.target.value);\n//   };\n//   const onChange2 = e => {\n//     setInput(e.target.value);\n//   };\n//   const getOutput = e => {\n//     e.preventDefault();\n//     // if (lang === 'python') {\n//     //   setId(36);\n//     // }\n//     // console.log('Hello, Ritvik this side');\n//     axios\n//       .post(`https://api.judge0.com/submissions`, {\n//         source_code: code,\n//         language_id: 12,\n//         stdin: input\n//       })\n//       .then(f => {\n//         console.log(f.data.token);\n//         setToken(f.data.token);\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       });\n//     axios\n//       .get(`https://api.judge0.com/submissions/${token}`)\n//       .then(g => {\n//         console.log(g);\n//         setOutput(g.data.stdout);\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       });\n//   };\n//   return (\n//     <div>\n//       <form onSubmit={getOutput} className='form'>\n//         <textarea\n//           rows='4'\n//           id='codemirror_input'\n//           cols='20'\n//           className='#e0f2f1 teal lighten-5'\n//           style={{ height: '500px' }}\n//           value={code}\n//           onChange={onChange1}\n//         />\n//         <CodeMirror\n//           name='comment'\n//           value={code}\n//           options={{\n//             theme: 'dracula',\n//             keyMap: 'sublime',\n//             mode: 'clojure',\n//             lineNumbers: true,\n//             rtlMoveVisually: true,\n//             readOnly: true\n//           }}\n//         />\n//         <textarea\n//           rows='4'\n//           cols='20'\n//           name='comment'\n//           form='usrform'\n//           placeholder='Enter your input here'\n//           className='#e0f2f1 teal lighten-5'\n//           style={{ height: '100px' }}\n//           value={input}\n//           onChange={onChange2}\n//         />\n//         {/* <input\n//               value={output}\n//               style={{ overflow: 'scroll', height: '200px' }}\n//             /> */}\n//         <textarea\n//           rows='4'\n//           cols='20'\n//           name='comment'\n//           form='usrform'\n//           className='#e0f2f1 teal lighten-5'\n//           style={{ height: '100px' }}\n//           value={output}\n//         />\n//         <input\n//           type='submit'\n//           value='Run'\n//           className='btn waves-effect waves-light'\n//         />\n//       </form>\n//     </div>\n//   );\n// };\n// export default Textbox;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport CodeMirror from '@uiw/react-codemirror';\nimport 'codemirror/addon/display/autorefresh';\nimport 'codemirror/addon/comment/comment';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/theme/dracula.css';\n\nconst Textbox = () => {\n  const _useState = useState('C++'),\n        _useState2 = _slicedToArray(_useState, 2),\n        language = _useState2[0],\n        setLanguage = _useState2[1];\n\n  const _useState3 = useState('//Enter your C++ code here'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        code = _useState4[0],\n        setCode = _useState4[1]; //   const [token, setToken] = useState(null);\n\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        output = _useState6[0],\n        setOutput = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        input = _useState8[0],\n        setInput = _useState8[1];\n\n  const onChange1 = e => {\n    setCode(e.target.value);\n  };\n\n  const onChange2 = e => {\n    setInput(e.target.value);\n  };\n\n  const getOutput = e => {\n    e.preventDefault(); // console.log('Hello, Ritvik this side');\n\n    axios.post(\"https://api.jdoodle.com/execute\", {\n      script: {\n        code\n      },\n      language: 'cpp14',\n      versionIndex: 2,\n      clientId: 'ca65c4cebda0b4cb8c0026bf5925c4fa',\n      clientSecret: '4d7f4b1c442e9ef0b01b1d69996cc2c5f28b1f8eb0bd579539b18280a312147b'\n    }).then(f => {\n      console.log(f.output);\n      setOutput(f.output);\n    }).catch(error => {\n      console.log(error);\n    }); // axios\n    //   .get(`https://api.judge0.com/submissions/${token}`)\n    //   .then(g => {\n    //     console.log(g.data.stdout);\n    //     setOutput(g.data.stdout);\n    //   })\n    //   .catch(error => {\n    //     console.log(error);\n    //   });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getOutput,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    rows: \"4\",\n    id: \"codemirror_input\",\n    cols: \"20\",\n    className: \"#e0f2f1 teal lighten-5\",\n    style: {\n      height: '500px'\n    },\n    value: code,\n    onChange: onChange1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(CodeMirror, {\n    name: \"comment\",\n    value: code,\n    options: {\n      theme: 'dracula',\n      keyMap: 'sublime',\n      mode: 'clojure',\n      lineNumbers: true,\n      rtlMoveVisually: true,\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"20\",\n    name: \"comment\",\n    form: \"usrform\",\n    placeholder: \"Enter your input here\",\n    className: \"#e0f2f1 teal lighten-5\",\n    style: {\n      height: '100px'\n    },\n    value: input,\n    onChange: onChange2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"20\",\n    name: \"comment\",\n    form: \"usrform\",\n    className: \"#e0f2f1 teal lighten-5\",\n    style: {\n      height: '100px'\n    },\n    value: output,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Run\",\n    className: \"btn waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  })));\n};\n\nexport default Textbox;","map":{"version":3,"sources":["/Users/ritviknagpal/Desktop/IDE/my-app/src/components/Textbox.js"],"names":["React","useState","PropTypes","axios","CodeMirror","Textbox","language","setLanguage","code","setCode","output","setOutput","input","setInput","onChange1","e","target","value","onChange2","getOutput","preventDefault","post","script","versionIndex","clientId","clientSecret","then","f","console","log","catch","error","height","theme","keyMap","mode","lineNumbers","rtlMoveVisually","readOnly"],"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","sourcesContent":["// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n// import axios from 'axios';\n// import CodeMirror from '@uiw/react-codemirror';\n// import 'codemirror/addon/display/autorefresh';\n// import 'codemirror/addon/comment/comment';\n// import 'codemirror/addon/edit/matchbrackets';\n// import 'codemirror/keymap/sublime';\n// import 'codemirror/theme/dracula.css';\n\n// const Textbox = ({ lang }) => {\n//   const [language, setLanguage] = useState(lang);\n//   const [code, setCode] = useState('//Enter your ' + lang + ' code here');\n//   const [token, setToken] = useState(null);\n//   const [output, setOutput] = useState('');\n//   const [input, setInput] = useState('');\n//   //   const [id, setId] = useState(12);\n//   const onChange1 = e => {\n//     setCode(e.target.value);\n//   };\n\n//   const onChange2 = e => {\n//     setInput(e.target.value);\n//   };\n\n//   const getOutput = e => {\n//     e.preventDefault();\n\n//     // if (lang === 'python') {\n//     //   setId(36);\n//     // }\n//     // console.log('Hello, Ritvik this side');\n//     axios\n//       .post(`https://api.judge0.com/submissions`, {\n//         source_code: code,\n//         language_id: 12,\n//         stdin: input\n//       })\n//       .then(f => {\n//         console.log(f.data.token);\n//         setToken(f.data.token);\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       });\n//     axios\n//       .get(`https://api.judge0.com/submissions/${token}`)\n//       .then(g => {\n//         console.log(g);\n//         setOutput(g.data.stdout);\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={getOutput} className='form'>\n//         <textarea\n//           rows='4'\n//           id='codemirror_input'\n//           cols='20'\n//           className='#e0f2f1 teal lighten-5'\n//           style={{ height: '500px' }}\n//           value={code}\n//           onChange={onChange1}\n//         />\n//         <CodeMirror\n//           name='comment'\n//           value={code}\n//           options={{\n//             theme: 'dracula',\n//             keyMap: 'sublime',\n//             mode: 'clojure',\n//             lineNumbers: true,\n//             rtlMoveVisually: true,\n//             readOnly: true\n//           }}\n//         />\n\n//         <textarea\n//           rows='4'\n//           cols='20'\n//           name='comment'\n//           form='usrform'\n//           placeholder='Enter your input here'\n//           className='#e0f2f1 teal lighten-5'\n//           style={{ height: '100px' }}\n//           value={input}\n//           onChange={onChange2}\n//         />\n\n//         {/* <input\n//               value={output}\n//               style={{ overflow: 'scroll', height: '200px' }}\n//             /> */}\n//         <textarea\n//           rows='4'\n//           cols='20'\n//           name='comment'\n//           form='usrform'\n//           className='#e0f2f1 teal lighten-5'\n//           style={{ height: '100px' }}\n//           value={output}\n//         />\n\n//         <input\n//           type='submit'\n//           value='Run'\n//           className='btn waves-effect waves-light'\n//         />\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Textbox;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport CodeMirror from '@uiw/react-codemirror';\nimport 'codemirror/addon/display/autorefresh';\nimport 'codemirror/addon/comment/comment';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/theme/dracula.css';\n\nconst Textbox = () => {\n  const [language, setLanguage] = useState('C++');\n  const [code, setCode] = useState('//Enter your C++ code here');\n  //   const [token, setToken] = useState(null);\n  const [output, setOutput] = useState('');\n  const [input, setInput] = useState('');\n  const onChange1 = e => {\n    setCode(e.target.value);\n  };\n\n  const onChange2 = e => {\n    setInput(e.target.value);\n  };\n\n  const getOutput = e => {\n    e.preventDefault();\n\n    // console.log('Hello, Ritvik this side');\n    axios\n      .post(`https://api.jdoodle.com/execute`, {\n        script: { code },\n        language: 'cpp14',\n        versionIndex: 2,\n        clientId: 'ca65c4cebda0b4cb8c0026bf5925c4fa',\n        clientSecret:\n          '4d7f4b1c442e9ef0b01b1d69996cc2c5f28b1f8eb0bd579539b18280a312147b'\n      })\n      .then(f => {\n        console.log(f.output);\n        setOutput(f.output);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    // axios\n    //   .get(`https://api.judge0.com/submissions/${token}`)\n    //   .then(g => {\n    //     console.log(g.data.stdout);\n    //     setOutput(g.data.stdout);\n    //   })\n    //   .catch(error => {\n    //     console.log(error);\n    //   });\n  };\n\n  return (\n    <div>\n      <form onSubmit={getOutput} className='form'>\n        <textarea\n          rows='4'\n          id='codemirror_input'\n          cols='20'\n          className='#e0f2f1 teal lighten-5'\n          style={{ height: '500px' }}\n          value={code}\n          onChange={onChange1}\n        />\n        <CodeMirror\n          name='comment'\n          value={code}\n          options={{\n            theme: 'dracula',\n            keyMap: 'sublime',\n            mode: 'clojure',\n            lineNumbers: true,\n            rtlMoveVisually: true,\n            readOnly: true\n          }}\n        />\n\n        <textarea\n          rows='4'\n          cols='20'\n          name='comment'\n          form='usrform'\n          placeholder='Enter your input here'\n          className='#e0f2f1 teal lighten-5'\n          style={{ height: '100px' }}\n          value={input}\n          onChange={onChange2}\n        />\n\n        {/* <input\n              value={output}\n              style={{ overflow: 'scroll', height: '200px' }}\n            /> */}\n        <textarea\n          rows='4'\n          cols='20'\n          name='comment'\n          form='usrform'\n          className='#e0f2f1 teal lighten-5'\n          style={{ height: '100px' }}\n          value={output}\n        />\n\n        <input\n          type='submit'\n          value='Run'\n          className='btn waves-effect waves-light'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Textbox;\n"]},"metadata":{},"sourceType":"module"}