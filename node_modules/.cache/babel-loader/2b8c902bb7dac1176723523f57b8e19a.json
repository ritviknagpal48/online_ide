{"ast":null,"code":"import _slicedToArray from \"/Users/ritviknagpal/Desktop/IDE/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ritviknagpal/Desktop/IDE/my-app/src/components/Textbox.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport CodeMirror from '@uiw/react-codemirror';\nimport 'codemirror/addon/display/autorefresh';\nimport 'codemirror/addon/comment/comment';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/theme/dracula.css';\n\nconst Textbox = ({\n  lang\n}) => {\n  const _useState = useState(lang),\n        _useState2 = _slicedToArray(_useState, 2),\n        language = _useState2[0],\n        setLanguage = _useState2[1];\n\n  const _useState3 = useState('//Enter your ' + lang + ' code here'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        code = _useState4[0],\n        setCode = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        token = _useState6[0],\n        setToken = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        output = _useState8[0],\n        setOutput = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        input = _useState10[0],\n        setInput = _useState10[1];\n\n  const _useState11 = useState(12),\n        _useState12 = _slicedToArray(_useState11, 2),\n        id = _useState12[0],\n        setId = _useState12[1];\n\n  const onChange1 = e => {\n    setCode(e.target.value);\n  };\n\n  const onChange2 = e => {\n    setInput(e.target.value);\n  };\n\n  const getOutput = e => {\n    // e.preventDefault();\n    if (lang === 'python') {\n      setId(36);\n    } // console.log('Hello, Ritvik this side');\n\n\n    axios.post(\"https://api.judge0.com/submissions\", {\n      source_code: code,\n      language_id: 12,\n      stdin: input\n    }).then(f => {\n      console.log(f.data.token);\n      setToken(f.data.token);\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.get(\"https://api.judge0.com/submissions/\".concat(token)).then(g => {\n      setOutput(g.data.stdout);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getOutput,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    rows: \"4\",\n    id: \"codemirror_input\",\n    cols: \"20\",\n    className: \"#e0f2f1 teal lighten-5\",\n    style: {\n      height: '500px'\n    },\n    value: code,\n    onChange: onChange1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CodeMirror, {\n    name: \"comment\",\n    value: code,\n    options: {\n      theme: 'dracula',\n      keyMap: 'sublime',\n      mode: 'clojure',\n      lineNumbers: true,\n      rtlMoveVisually: true,\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"20\",\n    name: \"comment\",\n    form: \"usrform\",\n    placeholder: \"Enter your input here\",\n    className: \"#e0f2f1 teal lighten-5\",\n    style: {\n      height: '100px'\n    },\n    value: input,\n    onChange: onChange2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"20\",\n    name: \"comment\",\n    form: \"usrform\",\n    className: \"#e0f2f1 teal lighten-5\",\n    style: {\n      height: '100px'\n    },\n    value: output,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Run\",\n    className: \"btn waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })));\n};\n\nexport default Textbox;","map":{"version":3,"sources":["/Users/ritviknagpal/Desktop/IDE/my-app/src/components/Textbox.js"],"names":["React","useState","PropTypes","axios","CodeMirror","Textbox","lang","language","setLanguage","code","setCode","token","setToken","output","setOutput","input","setInput","id","setId","onChange1","e","target","value","onChange2","getOutput","post","source_code","language_id","stdin","then","f","console","log","data","catch","error","get","g","stdout","height","theme","keyMap","mode","lineNumbers","rtlMoveVisually","readOnly"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport CodeMirror from '@uiw/react-codemirror';\nimport 'codemirror/addon/display/autorefresh';\nimport 'codemirror/addon/comment/comment';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/theme/dracula.css';\n\nconst Textbox = ({ lang }) => {\n  const [language, setLanguage] = useState(lang);\n  const [code, setCode] = useState('//Enter your ' + lang + ' code here');\n  const [token, setToken] = useState(null);\n  const [output, setOutput] = useState('');\n  const [input, setInput] = useState('');\n  const [id, setId] = useState(12);\n  const onChange1 = e => {\n    setCode(e.target.value);\n  };\n\n  const onChange2 = e => {\n    setInput(e.target.value);\n  };\n\n  const getOutput = e => {\n    // e.preventDefault();\n\n    if (lang === 'python') {\n      setId(36);\n    }\n    // console.log('Hello, Ritvik this side');\n    axios\n      .post(`https://api.judge0.com/submissions`, {\n        source_code: code,\n        language_id: 12,\n        stdin: input\n      })\n      .then(f => {\n        console.log(f.data.token);\n        setToken(f.data.token);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    axios\n      .get(`https://api.judge0.com/submissions/${token}`)\n      .then(g => {\n        setOutput(g.data.stdout);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <form onSubmit={getOutput} className='form'>\n        <textarea\n          rows='4'\n          id='codemirror_input'\n          cols='20'\n          className='#e0f2f1 teal lighten-5'\n          style={{ height: '500px' }}\n          value={code}\n          onChange={onChange1}\n        />\n        <CodeMirror\n          name='comment'\n          value={code}\n          options={{\n            theme: 'dracula',\n            keyMap: 'sublime',\n            mode: 'clojure',\n            lineNumbers: true,\n            rtlMoveVisually: true,\n            readOnly: true\n          }}\n        />\n\n        <textarea\n          rows='4'\n          cols='20'\n          name='comment'\n          form='usrform'\n          placeholder='Enter your input here'\n          className='#e0f2f1 teal lighten-5'\n          style={{ height: '100px' }}\n          value={input}\n          onChange={onChange2}\n        />\n\n        {/* <input\n              value={output}\n              style={{ overflow: 'scroll', height: '200px' }}\n            /> */}\n        <textarea\n          rows='4'\n          cols='20'\n          name='comment'\n          form='usrform'\n          className='#e0f2f1 teal lighten-5'\n          style={{ height: '100px' }}\n          value={output}\n        />\n\n        <input\n          type='submit'\n          value='Run'\n          className='btn waves-effect waves-light'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Textbox;\n"]},"metadata":{},"sourceType":"module"}