{"ast":null,"code":"import _slicedToArray from \"/Users/ritviknagpal/Desktop/IDE/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ritviknagpal/Desktop/IDE/my-app/src/components/Textbox.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios'; // import CodeMirror from '@uiw/react-codemirror';\n\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/yonce.css';\nimport 'codemirror/mode/clojure/clojure.js'; // import 'codemirror/theme/dracula.css';\n\nconst Textbox = ({\n  lang,\n  lang_id\n}) => {\n  const _useState = useState(lang),\n        _useState2 = _slicedToArray(_useState, 2),\n        language = _useState2[0],\n        setLanguage = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        code = _useState4[0],\n        setCode = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        token = _useState6[0],\n        setToken = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        output = _useState8[0],\n        setOutput = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        input = _useState10[0],\n        setInput = _useState10[1];\n\n  const _useState11 = useState(parseInt(lang_id)),\n        _useState12 = _slicedToArray(_useState11, 2),\n        id = _useState12[0],\n        setId = _useState12[1];\n\n  const onChange1 = e => {\n    setCode(e.target.value);\n  };\n\n  const onChange2 = e => {\n    setInput(e.target.value);\n  };\n\n  const getOutput = e => {\n    e.preventDefault();\n    axios.post(\"https://api.judge0.com/submissions\", {\n      source_code: code,\n      language_id: id,\n      stdin: input\n    }).then(f => {\n      console.log(f);\n      setToken(f.data.token);\n      axios.get(\"https://api.judge0.com/submissions/\".concat(token)).then(g => {\n        console.log(g);\n\n        if (g.data.stdout != null) {\n          setOutput(g.data.stdout);\n        } else {\n          setOutput(g.data.message + '\\n' + g.data.status.description + '\\n' + g.data.stderr);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getOutput,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(CodeMirror, {\n    value: code,\n    style: {\n      height: '1000px'\n    },\n    options: {\n      mode: 'clojure',\n      theme: 'yonce',\n      lineNumbers: true\n    },\n    onChange: (editor, data, value) => {\n      setCode(value); // console.log({ value });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"#f9a825 yellow-text text-darken-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Input\"), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"20\",\n    name: \"comment\",\n    form: \"usrform\",\n    placeholder: \"Enter your input here\",\n    className: \"#ffe082 amber lighten-4 #3e2723 brown-text text-darken-1\",\n    style: {\n      height: '150px'\n    },\n    value: input,\n    onChange: onChange2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"#f9a825 yellow-text text-darken-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Output\"), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"20\",\n    name: \"comment\",\n    form: \"usrform\",\n    className: \"#ffe082 amber lighten-4 #3e2723 brown-text text-darken-1\",\n    style: {\n      height: '150px',\n      fontWeight: 'bold'\n    },\n    value: output,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Run\",\n    style: {\n      width: '150px'\n    },\n    className: \" btn waves-effect #f9a825 yellow darken-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })));\n};\n\nTextbox.propTypes = {\n  lang: PropTypes.string.isRequired,\n  lang_id: PropTypes.number.isRequired\n};\nexport default Textbox;","map":{"version":3,"sources":["/Users/ritviknagpal/Desktop/IDE/my-app/src/components/Textbox.js"],"names":["React","useState","PropTypes","axios","UnControlled","CodeMirror","Textbox","lang","lang_id","language","setLanguage","code","setCode","token","setToken","output","setOutput","input","setInput","parseInt","id","setId","onChange1","e","target","value","onChange2","getOutput","preventDefault","post","source_code","language_id","stdin","then","f","console","log","data","get","g","stdout","message","status","description","stderr","catch","error","height","mode","theme","lineNumbers","editor","fontWeight","width","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n// import CodeMirror from '@uiw/react-codemirror';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/yonce.css';\n\nimport 'codemirror/mode/clojure/clojure.js';\n\n// import 'codemirror/theme/dracula.css';\n\nconst Textbox = ({ lang, lang_id }) => {\n  const [language, setLanguage] = useState(lang);\n  const [code, setCode] = useState('');\n  const [token, setToken] = useState(null);\n  const [output, setOutput] = useState('');\n  const [input, setInput] = useState('');\n  const [id, setId] = useState(parseInt(lang_id));\n  const onChange1 = e => {\n    setCode(e.target.value);\n  };\n\n  const onChange2 = e => {\n    setInput(e.target.value);\n  };\n\n  const getOutput = e => {\n    e.preventDefault();\n\n    axios\n      .post(`https://api.judge0.com/submissions`, {\n        source_code: code,\n        language_id: id,\n        stdin: input\n      })\n      .then(f => {\n        console.log(f);\n        setToken(f.data.token);\n        axios\n          .get(`https://api.judge0.com/submissions/${token}`)\n          .then(g => {\n            console.log(g);\n            if (g.data.stdout != null) {\n              setOutput(g.data.stdout);\n            } else {\n              setOutput(\n                g.data.message +\n                  '\\n' +\n                  g.data.status.description +\n                  '\\n' +\n                  g.data.stderr\n              );\n            }\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <form onSubmit={getOutput} className='form'>\n        {/* <textarea\n          id='id1'\n          rows='4'\n          cols='20'\n          className='#ffe082 amber lighten-4'\n          style={{ height: '500px' }}\n          value={code}\n          onChange={onChange1}\n        /> */}\n        <CodeMirror\n          value={code}\n          style={{ height: '1000px' }}\n          options={{\n            mode: 'clojure',\n            theme: 'yonce',\n            lineNumbers: true\n          }}\n          onChange={(editor, data, value) => {\n            setCode(value);\n            // console.log({ value });\n          }}\n        />\n        <h4 className='#f9a825 yellow-text text-darken-3'>Input</h4>\n        <textarea\n          rows='4'\n          cols='20'\n          name='comment'\n          form='usrform'\n          placeholder='Enter your input here'\n          className='#ffe082 amber lighten-4 #3e2723 brown-text text-darken-1'\n          style={{ height: '150px' }}\n          value={input}\n          onChange={onChange2}\n        />\n        {/* <input\n              value={output}\n              style={{ overflow: 'scroll', height: '200px' }}\n            /> */}\n        <h4 className='#f9a825 yellow-text text-darken-3'>Output</h4>\n        <textarea\n          rows='4'\n          cols='20'\n          name='comment'\n          form='usrform'\n          className='#ffe082 amber lighten-4 #3e2723 brown-text text-darken-1'\n          style={{ height: '150px', fontWeight: 'bold' }}\n          value={output}\n        />\n        <input\n          type='submit'\n          value='Run'\n          style={{ width: '150px' }}\n          className=' btn waves-effect #f9a825 yellow darken-3'\n        />\n      </form>\n    </div>\n  );\n};\nTextbox.propTypes = {\n  lang: PropTypes.string.isRequired,\n  lang_id: PropTypes.number.isRequired\n};\nexport default Textbox;\n"]},"metadata":{},"sourceType":"module"}